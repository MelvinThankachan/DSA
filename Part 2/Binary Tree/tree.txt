Trees

- Tree is a data structure which stores elements based on hierarchy. 
- It consist of Nodes and Edges. 
- Nodes are the objects where the data is stored and the edges are the connections between the nodes.
- Top node of a tree called root node. Root node have no parent node.
- Child nodes have only one parent node(Except root node)
- The nodes which have no child nodes called as Leef Nodes.


Properties
Depth   - Depth is nothing but a messure of how far is the target node from the root node. 
        - The depth of a node is the number of edges from the root node to the that node.
        - The depth of the root is 0.
        - The depth of a child node will be one more than it's parent node.
        - As we go down in the tree the depth increases.
Height  - Height is opposite to depth.
        - Height of a tree is the length of the logest path from the root to a leaf node.
        - it's the number of edges on the longest downward path from the root to a leaf
        - Height of any leaf node in a tree is 0.
        - Height of any node in a tree is the the length of longest path from the node to the distant leaf node.
        - As we go up in the tree the height increases.

Different types of Tree
- Binary Tree
- AVL Tree


Applications
- To represent hierarchical data
- Databases (To store the index of data for the efficint lookup)
- File systems
- Autocompletion (Store the possible outcomes in a hierarchical manner to autocomplete)
- Compilers (To parse expressions)
- Compression. To compress files like JPEG, MP3.
Trees have a lot of applications in real world


Binary Tree

- In binary trees one parent have no more than 2 child nodes.
- It is a recursive tree, that means all the subtrees are also a binary tree.

Binary Search Tree(BST)

- BST is a special type of Binary Tree for efficient searching.
- In Binary Search Tree for every node the left node value will be less than the parent node value and the right node value will be greater than the parent node value.


Operations in BST

- Lookup O(log n)
- Insert O(log n)
- Delete O(log n)

Trees offer a better performance than the arrays and linked lists.



Tree Traversal

- Breadth First Traversal
    In Breadth First order also known as Level order, we visit all the nodes in the same level before going to next level.

- Depth First Traversal
    In depth first we have 3 orders.
        - Pre-order (Root, Left subtree, Right subtree)
        - In-order (Left subtree, Root, Right subtree) - We get the elements in ascending order.
        - Post-order (Left subtree, Right subtree, Root) - In this the root node will be visited at last.